% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RBDfit.R
\name{RBDfit}
\alias{RBDfit}
\title{RBDfit}
\usage{
RBDfit(seq, labels, k = 3, n = "Q1", model = FALSE)
}
\arguments{
\item{seq}{chr arr containing amino acid sequences of proteins}

\item{labels}{int arr containing labels: 0 = NoRBP, 1 = RBP}

\item{k}{int (= 3) defining the length of peptides to be extracted}

\item{n}{chr (= "Q1") int or num defining the number of features to use.
chr can be "Q1", "Q2", "Q3" for 1st 1, 2, 3 quartiles or "all" for all features.
num can be anything from 0 to 1 defining quantile of features to use.
int anything > 1 to define plain number of features to use.}

\item{model}{bool (= FALSE) whether model frame should be returned as well}
}
\value{
list of class RBPmodel 5 elements 
\itemize{
    \item RBDmodel sda object of the actual fit 
    \item RBDranking matrix containing information about the feature ranking
    \item RBDparams arguments RBPfit was called with
 }
 If model=TRUE 2 more elements are returned
 \itemize{
    \item RBDfeatureExtraction matrix: columns = features, rows = proteins, values = occurences
    \item RBDlabels int arr of original protein labels
 }
}
\description{
Create a model for RBP prediction based on protein sequences and labels.
}
\details{
The underlying mechanism is a shrinkage discrimminant analysis.
As features, the occurences of peptide combinations in each protein sequence are regarded.
k defines the length of these peptides. 
With n the number of features used in the model can be defined.

With small k only primitive structures can be described. With big k however the feature space becomes huge.
k = 3 seems to be a good trade-off with a feature space of 8000 (20^3).

First, the whole feature space is created.
Then features are ranked based on the data provided.
How many features the model will actually use can be defined with n.
With n = "all" all features are used.
However, most of the time it is useful to only use a subset of features.
}
\examples{
l <- c("A", "E", "K", "S", "R", "Q", "L", "T", "N", "G", "M", "W", "D", "H", "F", "Y", "C", "I", "P", "V")
sequences <- sapply(sample(10:100, 500, replace = TRUE), function(x) paste(sample(l, x, replace = TRUE), collapse = ""))
labels <- c(rep(1, 200), rep(0, 300))

model <- RBDfit(sequences, labels, k = 2)
str(model)
model
plot(model)

}

