% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ROCplot.R
\name{ROCplot}
\alias{ROCplot}
\title{ROCplot}
\usage{
ROCplot(err, sens = NULL, data = FALSE, names = NULL, legend = "model",
  title = "ROC")
}
\arguments{
\item{err}{RBDerr object or list of RBDerr objects}

\item{sens}{num(= NULL) define a sensitivity value to show as horizontal line in plot}

\item{data}{bool(= FALSE) whether to just return the data.frame with precision, recall, fallout without plotting}

\item{names}{chr arr(= NULL) names for curves in case multiple curves are plotted. names is mapped to point colors.}

\item{legend}{chr(= "model") legend title in case multiple ROC curves are plotted, NULL for no legend, "" for no legend title}

\item{title}{chr(= "ROC") title of plot, NULL for no title}
}
\value{
plot object (ggplot) or data.frame containing fallout, recall, precision
}
\description{
Plotting a Receiver Operating Characteristic curve for RBDerr object.
}
\details{
This is a common plot to evaluate prediction power of a predictor.
Correct and incorrect classifications of RBPs and NoRBPs are assessed equally.
Set argument sens to see Sensitivity and Specificity of at specific stringencies.

For plotting multiple ROC curves you can provide a list of RBDerr objects as 1st argument.
You must provide names for each curve with the names argument.
If many (>10) curves are plotted use numerical values as names. 
This way the legend will be a continuum.
}
\examples{
l <- c("A", "E", "K", "S", "R", "Q", "L", "T", "N", "G", "M", "W", "D", "H", "F", "Y", "C", "I", "P", "V")
sequences <- sapply(sample(10:100, 500, replace = TRUE), function(x) paste(sample(l, x, replace = TRUE), collapse = ""))
labels <- c(rep(1, 200), rep(0, 300))

model <- RBDfit(sequences, labels, k = 2)
err <- cvRBDfit(model, sequences, labels, nfold = 3)
ROCplot(err, sens = 0.5)

d <- ROCplot(err, data = TRUE)
summary(d)
plot(d$fal, d$rec)

err2 <- cvRBDfit(model, sequences, labels, nfold = 5)
ROCplot(list(err, err2), legend = "cross validation", names = c("3fold", "5fold") sens = 0.5)

}

