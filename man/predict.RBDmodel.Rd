% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.RBDmodel.R
\name{predict.RBDmodel}
\alias{(if}
\alias{(produced}
\alias{(via}
\alias{FDR}
\alias{If}
\alias{In}
\alias{Note}
\alias{Predict}
\alias{RBDmodel}
\alias{RBP.}
\alias{RBPs}
\alias{Without}
\alias{a}
\alias{achieved.}
\alias{addErr}
\alias{added}
\alias{always}
\alias{an}
\alias{and}
\alias{are}
\alias{as}
\alias{based}
\alias{be}
\alias{being}
\alias{both}
\alias{can}
\alias{cannot}
\alias{case}
\alias{classification}
\alias{cvRBDfit}
\alias{desired}
\alias{each}
\alias{error}
\alias{especially}
\alias{estimate}
\alias{estimate.}
\alias{for}
\alias{from}
\alias{function)}
\alias{ignored).}
\alias{is}
\alias{its}
\alias{model}
\alias{new}
\alias{of}
\alias{on}
\alias{or}
\alias{plain}
\alias{posterior}
\alias{predict}
\alias{predict.RBDmodel}
\alias{prediction}
\alias{predictor}
\alias{probabilities}
\alias{return}
\alias{returned}
\alias{sens}
\alias{sequence}
\alias{set}
\alias{set,}
\alias{that}
\alias{the}
\alias{this}
\alias{to}
\alias{value}
\alias{was}
\alias{well.}
\alias{will}
\alias{with}
\title{predict.RBDmodel}
\usage{
\method{predict}{RBDmodel}(model, seq, sens = NULL, FDR = NULL)
}
\arguments{
\item{model}{RBDmodel created with RBDfit}

\item{seq}{chr arr of new protein sequences}

\item{sens}{num(= NULL) desired sensitivtiy of classification (will be ignored if FDR is set)}

\item{FDR}{num(= NULL) desired false discovery rate (1 - precision) of classification}
}
\value{
list of class RBPprediction with 2 elements 
\itemize{
    \item RBPpp posterior probabilities of seq being RBPs
    \item RBPparams list of parameters used in the prediction
}
If sens or FDR was set a vector containing the classification will be added
\itemize{
    \item RBPclass classification of seq (1 = RBP, 0 = NoRBP)
}
}
\description{
predict.RBDmodel
}
\examples{
l <- c("A", "E", "K", "S", "R", "Q", "L", "T", "N", "G", "M", "W", "D", "H", "F", "Y", "C", "I", "P", "V")
sequences <- sapply(sample(10:100, 500, replace = TRUE), function(x) paste(sample(l, x, replace = TRUE), collapse = ""))
labels <- c(rep(1, 200), rep(0, 300))

model <- RBDfit(sequences, labels, k = 2)
err <- cvRBDfit(model, sequences, labels, nfold = 3)
model <- addErr(model, err)

newseq <- sapply(sample(10:100, 500, replace = TRUE), function(x) paste(sample(l, x, replace = TRUE), collapse = ""))
pred <- predict(model, newseq, sens = 0.5)

pred
plot(pred)

}

